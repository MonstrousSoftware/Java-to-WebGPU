package com.monstrous.webgpu;

import com.monstrous.utils.WgpuJava;
import com.monstrous.utils.CStrPointer;
import com.monstrous.utils.WgpuJavaStruct;
import com.monstrous.utils.RustCString;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPURenderPipelineDescriptor extends WgpuJavaStruct {

    private final DynamicStructRef<WGPUChainedStruct> nextInChain = new DynamicStructRef<>(WGPUChainedStruct.class);
    private final @CStrPointer Pointer label = new Pointer();
    private final Pointer layout = new Pointer();
    private final WGPUVertexState vertex = inner(WGPUVertexState.createHeap());
    private final WGPUPrimitiveState primitive = inner(WGPUPrimitiveState.createHeap());
    private final DynamicStructRef<WGPUDepthStencilState> depthStencil = new DynamicStructRef<>(WGPUDepthStencilState.class);
    private final WGPUMultisampleState multisample = inner(WGPUMultisampleState.createHeap());
    private final DynamicStructRef<WGPUFragmentState> fragment = new DynamicStructRef<>(WGPUFragmentState.class);

    private WGPURenderPipelineDescriptor(){}

    @Deprecated
    public WGPURenderPipelineDescriptor(Runtime runtime){
        super(runtime);
    }

	/**
	* Creates this struct on the java heap.
	* In general, this should <b>not</b> be used because these structs
	* cannot be directly passed into native code. 
	*/
    public static WGPURenderPipelineDescriptor createHeap(){
        return new WGPURenderPipelineDescriptor();
    }

	/**
	* Creates this struct in direct memory.
	* This is how most structs should be created (unless, they
	* are members of a nothing struct)
	* 
	* @see WgpuJavaStruct#useDirectMemory
	*/
    public static WGPURenderPipelineDescriptor createDirect(){
        var struct = new WGPURenderPipelineDescriptor();
        struct.useDirectMemory();
        return struct;
    }


    public DynamicStructRef<WGPUChainedStruct> getNextInChain(){
        return nextInChain;
    }

    public void setNextInChain(WGPUChainedStruct... x){
        if(x.length == 0 || x[0] == null){
            this.nextInChain.set(WgpuJava.createNullPointer());
        } else {
            this.nextInChain.set(x);
        }
    }

    public java.lang.String getLabel(){
        return RustCString.fromPointer(label.get());
    }

    public void setLabel(java.lang.String x){
        this.label.set(RustCString.toPointer(x));
    }

    public jnr.ffi.Pointer getLayout(){
        return layout.get();
    }

    public void setLayout(jnr.ffi.Pointer x){
        this.layout.set(x);
    }

    public WGPUVertexState getVertex(){
        return vertex;
    }

    public WGPUPrimitiveState getPrimitive(){
        return primitive;
    }

    public DynamicStructRef<WGPUDepthStencilState> getDepthStencil(){
        return depthStencil;
    }

    public void setDepthStencil(WGPUDepthStencilState... x){
        if(x.length == 0 || x[0] == null){
            this.depthStencil.set(WgpuJava.createNullPointer());
        } else {
            this.depthStencil.set(x);
        }
    }

    public WGPUMultisampleState getMultisample(){
        return multisample;
    }

    public DynamicStructRef<WGPUFragmentState> getFragment(){
        return fragment;
    }

    public void setFragment(WGPUFragmentState... x){
        if(x.length == 0 || x[0] == null){
            this.fragment.set(WgpuJava.createNullPointer());
        } else {
            this.fragment.set(x);
        }
    }

}