package com.monstrous.webgpu;

import com.monstrous.utils.WgpuJava;
import com.monstrous.utils.CStrPointer;
import com.monstrous.utils.WgpuJavaStruct;
import com.monstrous.utils.RustCString;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUMemoryHeapInfo extends WgpuJavaStruct {

    private final Unsigned32 properties = new Unsigned32();
    private final Unsigned64 size = new Unsigned64();

    private WGPUMemoryHeapInfo(){}

    @Deprecated
    public WGPUMemoryHeapInfo(Runtime runtime){
        super(runtime);
    }

	/**
	* Creates this struct on the java heap.
	* In general, this should <b>not</b> be used because these structs
	* cannot be directly passed into native code. 
	*/
    public static WGPUMemoryHeapInfo createHeap(){
        return new WGPUMemoryHeapInfo();
    }

	/**
	* Creates this struct in direct memory.
	* This is how most structs should be created (unless, they
	* are members of a nothing struct)
	* 
	* @see WgpuJavaStruct#useDirectMemory
	*/
    public static WGPUMemoryHeapInfo createDirect(){
        var struct = new WGPUMemoryHeapInfo();
        struct.useDirectMemory();
        return struct;
    }


    public long getProperties(){
        return properties.get();
    }

    public void setProperties(long x){
        this.properties.set(x);
    }

    public @jnr.ffi.types.u_int64_t long getSize(){
        return size.get();
    }

    public void setSize(@jnr.ffi.types.u_int64_t long x){
        this.size.set(x);
    }

}