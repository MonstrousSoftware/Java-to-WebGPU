package com.monstrous.webgpu;

import com.monstrous.utils.JavaWebGPU;
import com.monstrous.utils.WgpuJavaStruct;
import jnr.ffi.Runtime;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPURenderPassStorageAttachment extends WgpuJavaStruct {

    private final DynamicStructRef<WGPUChainedStruct> nextInChain = new DynamicStructRef<>(WGPUChainedStruct.class);
    private final Unsigned64 offset = new Unsigned64();
    private final Pointer storage = new Pointer();
    private final Enum<WGPULoadOp> loadOp = new Enum<>(WGPULoadOp.class);
    private final Enum<WGPUStoreOp> storeOp = new Enum<>(WGPUStoreOp.class);
    private final WGPUColor clearValue = inner(WGPUColor.createHeap());

    private WGPURenderPassStorageAttachment(){}

    @Deprecated
    public WGPURenderPassStorageAttachment(Runtime runtime){
        super(runtime);
    }

	/**
	* Creates this struct on the java heap.
	* In general, this should <b>not</b> be used because these structs
	* cannot be directly passed into native code. 
	*/
    public static WGPURenderPassStorageAttachment createHeap(){
        return new WGPURenderPassStorageAttachment();
    }

	/**
	* Creates this struct in direct memory.
	* This is how most structs should be created (unless, they
	* are members of a nothing struct)
	* 
	* @see WgpuJavaStruct#useDirectMemory
	*/
    public static WGPURenderPassStorageAttachment createDirect(){
        var struct = new WGPURenderPassStorageAttachment();
        struct.useDirectMemory();
        return struct;
    }


    public DynamicStructRef<WGPUChainedStruct> getNextInChain(){
        return nextInChain;
    }

    public void setNextInChain(WGPUChainedStruct... x){
        if(x.length == 0 || x[0] == null){
            this.nextInChain.set(JavaWebGPU.createNullPointer());
        } else {
            this.nextInChain.set(x);
        }
    }

    public @jnr.ffi.types.u_int64_t long getOffset(){
        return offset.get();
    }

    public void setOffset(@jnr.ffi.types.u_int64_t long x){
        this.offset.set(x);
    }

    public jnr.ffi.Pointer getStorage(){
        return storage.get();
    }

    public void setStorage(jnr.ffi.Pointer x){
        this.storage.set(x);
    }

    public WGPULoadOp getLoadOp(){
        return loadOp.get();
    }

    public void setLoadOp(WGPULoadOp x){
        this.loadOp.set(x);
    }

    public WGPUStoreOp getStoreOp(){
        return storeOp.get();
    }

    public void setStoreOp(WGPUStoreOp x){
        this.storeOp.set(x);
    }

    public WGPUColor getClearValue(){
        return clearValue;
    }

}