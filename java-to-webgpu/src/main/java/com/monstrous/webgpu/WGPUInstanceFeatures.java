package com.monstrous.webgpu;

import com.monstrous.utils.JavaWebGPU;
import com.monstrous.utils.CStrPointer;
import com.monstrous.utils.WgpuJavaStruct;
import com.monstrous.utils.RustCString;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUInstanceFeatures extends WgpuJavaStruct {

    private final DynamicStructRef<WGPUChainedStruct> nextInChain = new DynamicStructRef<>(WGPUChainedStruct.class);
    private final Struct.Unsigned32 timedWaitAnyEnable = new Struct.Unsigned32();
    private final Struct.size_t timedWaitAnyMaxCount = new Struct.size_t();

    private WGPUInstanceFeatures(){}

    @Deprecated
    public WGPUInstanceFeatures(Runtime runtime){
        super(runtime);
    }

	/**
	* Creates this struct on the java heap.
	* In general, this should <b>not</b> be used because these structs
	* cannot be directly passed into native code. 
	*/
    public static WGPUInstanceFeatures createHeap(){
        return new WGPUInstanceFeatures();
    }

	/**
	* Creates this struct in direct memory.
	* This is how most structs should be created (unless, they
	* are members of a nothing struct)
	* 
	* @see WgpuJavaStruct#useDirectMemory
	*/
    public static WGPUInstanceFeatures createDirect(){
        WGPUInstanceFeatures struct = new WGPUInstanceFeatures();
        struct.useDirectMemory();
        return struct;
    }


    public DynamicStructRef<WGPUChainedStruct> getNextInChain(){
        return nextInChain;
    }

    public void setNextInChain(WGPUChainedStruct... x){
        if(x.length == 0 || x[0] == null){
            this.nextInChain.set(JavaWebGPU.createNullPointer());
        } else {
            this.nextInChain.set(x);
        }
    }

    public long getTimedWaitAnyEnable(){
        return timedWaitAnyEnable.get();
    }

    public void setTimedWaitAnyEnable(long x){
        this.timedWaitAnyEnable.set(x);
    }

    public long getTimedWaitAnyMaxCount(){
        return timedWaitAnyMaxCount.get();
    }

    public void setTimedWaitAnyMaxCount(long x){
        this.timedWaitAnyMaxCount.set(x);
    }

}