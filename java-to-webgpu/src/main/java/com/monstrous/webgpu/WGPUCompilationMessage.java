package com.monstrous.webgpu;

import com.monstrous.utils.WgpuJava;
import com.monstrous.utils.CStrPointer;
import com.monstrous.utils.WgpuJavaStruct;
import com.monstrous.utils.RustCString;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUCompilationMessage extends WgpuJavaStruct {

    private final DynamicStructRef<WGPUChainedStruct> nextInChain = new DynamicStructRef<>(WGPUChainedStruct.class);
    private final @CStrPointer Pointer message = new Pointer();
    private final Enum<WGPUCompilationMessageType> type = new Enum<>(WGPUCompilationMessageType.class);
    private final Unsigned64 lineNum = new Unsigned64();
    private final Unsigned64 linePos = new Unsigned64();
    private final Unsigned64 offset = new Unsigned64();
    private final Unsigned64 length = new Unsigned64();
    private final Unsigned64 utf16LinePos = new Unsigned64();
    private final Unsigned64 utf16Offset = new Unsigned64();
    private final Unsigned64 utf16Length = new Unsigned64();

    private WGPUCompilationMessage(){}

    @Deprecated
    public WGPUCompilationMessage(Runtime runtime){
        super(runtime);
    }

	/**
	* Creates this struct on the java heap.
	* In general, this should <b>not</b> be used because these structs
	* cannot be directly passed into native code. 
	*/
    public static WGPUCompilationMessage createHeap(){
        return new WGPUCompilationMessage();
    }

	/**
	* Creates this struct in direct memory.
	* This is how most structs should be created (unless, they
	* are members of a nothing struct)
	* 
	* @see WgpuJavaStruct#useDirectMemory
	*/
    public static WGPUCompilationMessage createDirect(){
        var struct = new WGPUCompilationMessage();
        struct.useDirectMemory();
        return struct;
    }


    public DynamicStructRef<WGPUChainedStruct> getNextInChain(){
        return nextInChain;
    }

    public void setNextInChain(WGPUChainedStruct... x){
        if(x.length == 0 || x[0] == null){
            this.nextInChain.set(WgpuJava.createNullPointer());
        } else {
            this.nextInChain.set(x);
        }
    }

    public java.lang.String getMessage(){
        return RustCString.fromPointer(message.get());
    }

    public void setMessage(java.lang.String x){
        this.message.set(RustCString.toPointer(x));
    }

    public WGPUCompilationMessageType getType(){
        return type.get();
    }

    public void setType(WGPUCompilationMessageType x){
        this.type.set(x);
    }

    public @jnr.ffi.types.u_int64_t long getLineNum(){
        return lineNum.get();
    }

    public void setLineNum(@jnr.ffi.types.u_int64_t long x){
        this.lineNum.set(x);
    }

    public @jnr.ffi.types.u_int64_t long getLinePos(){
        return linePos.get();
    }

    public void setLinePos(@jnr.ffi.types.u_int64_t long x){
        this.linePos.set(x);
    }

    public @jnr.ffi.types.u_int64_t long getOffset(){
        return offset.get();
    }

    public void setOffset(@jnr.ffi.types.u_int64_t long x){
        this.offset.set(x);
    }

    public @jnr.ffi.types.u_int64_t long getLength(){
        return length.get();
    }

    public void setLength(@jnr.ffi.types.u_int64_t long x){
        this.length.set(x);
    }

    public @jnr.ffi.types.u_int64_t long getUtf16LinePos(){
        return utf16LinePos.get();
    }

    public void setUtf16LinePos(@jnr.ffi.types.u_int64_t long x){
        this.utf16LinePos.set(x);
    }

    public @jnr.ffi.types.u_int64_t long getUtf16Offset(){
        return utf16Offset.get();
    }

    public void setUtf16Offset(@jnr.ffi.types.u_int64_t long x){
        this.utf16Offset.set(x);
    }

    public @jnr.ffi.types.u_int64_t long getUtf16Length(){
        return utf16Length.get();
    }

    public void setUtf16Length(@jnr.ffi.types.u_int64_t long x){
        this.utf16Length.set(x);
    }

}