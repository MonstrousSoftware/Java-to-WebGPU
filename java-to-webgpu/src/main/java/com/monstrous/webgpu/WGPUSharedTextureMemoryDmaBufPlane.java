package com.monstrous.webgpu;

import com.monstrous.utils.WgpuJava;
import com.monstrous.utils.CStrPointer;
import com.monstrous.utils.WgpuJavaStruct;
import com.monstrous.utils.RustCString;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUSharedTextureMemoryDmaBufPlane extends WgpuJavaStruct {

    private final Unsigned32 fd = new Unsigned32();
    private final Unsigned64 offset = new Unsigned64();
    private final Unsigned32 stride = new Unsigned32();

    private WGPUSharedTextureMemoryDmaBufPlane(){}

    @Deprecated
    public WGPUSharedTextureMemoryDmaBufPlane(Runtime runtime){
        super(runtime);
    }

	/**
	* Creates this struct on the java heap.
	* In general, this should <b>not</b> be used because these structs
	* cannot be directly passed into native code. 
	*/
    public static WGPUSharedTextureMemoryDmaBufPlane createHeap(){
        return new WGPUSharedTextureMemoryDmaBufPlane();
    }

	/**
	* Creates this struct in direct memory.
	* This is how most structs should be created (unless, they
	* are members of a nothing struct)
	* 
	* @see WgpuJavaStruct#useDirectMemory
	*/
    public static WGPUSharedTextureMemoryDmaBufPlane createDirect(){
        var struct = new WGPUSharedTextureMemoryDmaBufPlane();
        struct.useDirectMemory();
        return struct;
    }


    public long getFd(){
        return fd.get();
    }

    public void setFd(long x){
        this.fd.set(x);
    }

    public @jnr.ffi.types.u_int64_t long getOffset(){
        return offset.get();
    }

    public void setOffset(@jnr.ffi.types.u_int64_t long x){
        this.offset.set(x);
    }

    public long getStride(){
        return stride.get();
    }

    public void setStride(long x){
        this.stride.set(x);
    }

}