package com.monstrous.webgpu;

import com.monstrous.utils.JavaWebGPU;
import com.monstrous.utils.CStrPointer;
import com.monstrous.utils.WgpuJavaStruct;
import com.monstrous.utils.RustCString;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUAdapterInfo extends WgpuJavaStruct {

    private final DynamicStructRef<WGPUChainedStructOut> nextInChain = new DynamicStructRef<>(WGPUChainedStructOut.class);
    private final @CStrPointer Struct.Pointer vendor = new Struct.Pointer();
    private final @CStrPointer Struct.Pointer architecture = new Struct.Pointer();
    private final @CStrPointer Struct.Pointer device = new Struct.Pointer();
    private final @CStrPointer Struct.Pointer description = new Struct.Pointer();
    private final Struct.Enum<WGPUBackendType> backendType = new Struct.Enum<>(WGPUBackendType.class);
    private final Struct.Enum<WGPUAdapterType> adapterType = new Struct.Enum<>(WGPUAdapterType.class);
    private final Struct.Unsigned32 vendorID = new Struct.Unsigned32();
    private final Struct.Unsigned32 deviceID = new Struct.Unsigned32();

    private WGPUAdapterInfo(){}

    @Deprecated
    public WGPUAdapterInfo(Runtime runtime){
        super(runtime);
    }

	/**
	* Creates this struct on the java heap.
	* In general, this should <b>not</b> be used because these structs
	* cannot be directly passed into native code. 
	*/
    public static WGPUAdapterInfo createHeap(){
        return new WGPUAdapterInfo();
    }

	/**
	* Creates this struct in direct memory.
	* This is how most structs should be created (unless, they
	* are members of a nothing struct)
	* 
	* @see WgpuJavaStruct#useDirectMemory
	*/
    public static WGPUAdapterInfo createDirect(){
        WGPUAdapterInfo struct = new WGPUAdapterInfo();
        struct.useDirectMemory();
        return struct;
    }


    public DynamicStructRef<WGPUChainedStructOut> getNextInChain(){
        return nextInChain;
    }

    public void setNextInChain(WGPUChainedStructOut... x){
        if(x.length == 0 || x[0] == null){
            this.nextInChain.set(JavaWebGPU.createNullPointer());
        } else {
            this.nextInChain.set(x);
        }
    }

    public java.lang.String getVendor(){
        return RustCString.fromPointer(vendor.get());
    }

    public void setVendor(java.lang.String x){
        this.vendor.set(RustCString.toPointer(x));
    }

    public java.lang.String getArchitecture(){
        return RustCString.fromPointer(architecture.get());
    }

    public void setArchitecture(java.lang.String x){
        this.architecture.set(RustCString.toPointer(x));
    }

    public java.lang.String getDevice(){
        return RustCString.fromPointer(device.get());
    }

    public void setDevice(java.lang.String x){
        this.device.set(RustCString.toPointer(x));
    }

    public java.lang.String getDescription(){
        return RustCString.fromPointer(description.get());
    }

    public void setDescription(java.lang.String x){
        this.description.set(RustCString.toPointer(x));
    }

    public WGPUBackendType getBackendType(){
        return backendType.get();
    }

    public void setBackendType(WGPUBackendType x){
        this.backendType.set(x);
    }

    public WGPUAdapterType getAdapterType(){
        return adapterType.get();
    }

    public void setAdapterType(WGPUAdapterType x){
        this.adapterType.set(x);
    }

    public long getVendorID(){
        return vendorID.get();
    }

    public void setVendorID(long x){
        this.vendorID.set(x);
    }

    public long getDeviceID(){
        return deviceID.get();
    }

    public void setDeviceID(long x){
        this.deviceID.set(x);
    }

}