package com.monstrous.webgpu;

import com.monstrous.utils.WgpuJava;
import com.monstrous.utils.CStrPointer;
import com.monstrous.utils.WgpuJavaStruct;
import com.monstrous.utils.RustCString;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUVertexAttribute extends WgpuJavaStruct {

    private final Enum<WGPUVertexFormat> format = new Enum<>(WGPUVertexFormat.class);
    private final Unsigned64 offset = new Unsigned64();
    private final Unsigned32 shaderLocation = new Unsigned32();

    private WGPUVertexAttribute(){}

    @Deprecated
    public WGPUVertexAttribute(Runtime runtime){
        super(runtime);
    }

	/**
	* Creates this struct on the java heap.
	* In general, this should <b>not</b> be used because these structs
	* cannot be directly passed into native code. 
	*/
    public static WGPUVertexAttribute createHeap(){
        return new WGPUVertexAttribute();
    }

	/**
	* Creates this struct in direct memory.
	* This is how most structs should be created (unless, they
	* are members of a nothing struct)
	* 
	* @see WgpuJavaStruct#useDirectMemory
	*/
    public static WGPUVertexAttribute createDirect(){
        var struct = new WGPUVertexAttribute();
        struct.useDirectMemory();
        return struct;
    }


    public WGPUVertexFormat getFormat(){
        return format.get();
    }

    public void setFormat(WGPUVertexFormat x){
        this.format.set(x);
    }

    public @jnr.ffi.types.u_int64_t long getOffset(){
        return offset.get();
    }

    public void setOffset(@jnr.ffi.types.u_int64_t long x){
        this.offset.set(x);
    }

    public long getShaderLocation(){
        return shaderLocation.get();
    }

    public void setShaderLocation(long x){
        this.shaderLocation.set(x);
    }

}