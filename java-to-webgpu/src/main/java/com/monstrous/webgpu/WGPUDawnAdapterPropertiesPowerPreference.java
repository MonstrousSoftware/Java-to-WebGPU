package com.monstrous.webgpu;

import com.monstrous.utils.WgpuJava;
import com.monstrous.utils.CStrPointer;
import com.monstrous.utils.WgpuJavaStruct;
import com.monstrous.utils.RustCString;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUDawnAdapterPropertiesPowerPreference extends WgpuJavaStruct {

    private final WGPUChainedStructOut chain = inner(WGPUChainedStructOut.createHeap());
    private final Enum<WGPUPowerPreference> powerPreference = new Enum<>(WGPUPowerPreference.class);

    private WGPUDawnAdapterPropertiesPowerPreference(){}

    @Deprecated
    public WGPUDawnAdapterPropertiesPowerPreference(Runtime runtime){
        super(runtime);
    }

	/**
	* Creates this struct on the java heap.
	* In general, this should <b>not</b> be used because these structs
	* cannot be directly passed into native code. 
	*/
    public static WGPUDawnAdapterPropertiesPowerPreference createHeap(){
        return new WGPUDawnAdapterPropertiesPowerPreference();
    }

	/**
	* Creates this struct in direct memory.
	* This is how most structs should be created (unless, they
	* are members of a nothing struct)
	* 
	* @see WgpuJavaStruct#useDirectMemory
	*/
    public static WGPUDawnAdapterPropertiesPowerPreference createDirect(){
        var struct = new WGPUDawnAdapterPropertiesPowerPreference();
        struct.useDirectMemory();
        return struct;
    }


    public WGPUChainedStructOut getChain(){
        return chain;
    }

    public WGPUPowerPreference getPowerPreference(){
        return powerPreference.get();
    }

    public void setPowerPreference(WGPUPowerPreference x){
        this.powerPreference.set(x);
    }

}