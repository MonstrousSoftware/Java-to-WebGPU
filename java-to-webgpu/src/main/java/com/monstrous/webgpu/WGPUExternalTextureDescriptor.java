package com.monstrous.webgpu;

import com.monstrous.utils.JavaWebGPU;
import com.monstrous.utils.CStrPointer;
import com.monstrous.utils.WgpuJavaStruct;
import com.monstrous.utils.RustCString;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUExternalTextureDescriptor extends WgpuJavaStruct {

    private final DynamicStructRef<WGPUChainedStruct> nextInChain = new DynamicStructRef<>(WGPUChainedStruct.class);
    private final @CStrPointer Struct.Pointer label = new Struct.Pointer();
    private final Struct.Pointer plane0 = new Struct.Pointer();
    private final Struct.Pointer plane1 = new Struct.Pointer();
    private final WGPUOrigin2D visibleOrigin = inner(WGPUOrigin2D.createHeap());
    private final WGPUExtent2D visibleSize = inner(WGPUExtent2D.createHeap());
    private final Struct.Unsigned32 doYuvToRgbConversionOnly = new Struct.Unsigned32();
    private final Struct.Pointer yuvToRgbConversionMatrix = new Struct.Pointer();
    private final Struct.Pointer srcTransferFunctionParameters = new Struct.Pointer();
    private final Struct.Pointer dstTransferFunctionParameters = new Struct.Pointer();
    private final Struct.Pointer gamutConversionMatrix = new Struct.Pointer();
    private final Struct.Unsigned32 mirrored = new Struct.Unsigned32();
    private final Struct.Enum<WGPUExternalTextureRotation> rotation = new Struct.Enum<>(WGPUExternalTextureRotation.class);

    private WGPUExternalTextureDescriptor(){}

    @Deprecated
    public WGPUExternalTextureDescriptor(Runtime runtime){
        super(runtime);
    }

	/**
	* Creates this struct on the java heap.
	* In general, this should <b>not</b> be used because these structs
	* cannot be directly passed into native code. 
	*/
    public static WGPUExternalTextureDescriptor createHeap(){
        return new WGPUExternalTextureDescriptor();
    }

	/**
	* Creates this struct in direct memory.
	* This is how most structs should be created (unless, they
	* are members of a nothing struct)
	* 
	* @see WgpuJavaStruct#useDirectMemory
	*/
    public static WGPUExternalTextureDescriptor createDirect(){
        WGPUExternalTextureDescriptor struct = new WGPUExternalTextureDescriptor();
        struct.useDirectMemory();
        return struct;
    }


    public DynamicStructRef<WGPUChainedStruct> getNextInChain(){
        return nextInChain;
    }

    public void setNextInChain(WGPUChainedStruct... x){
        if(x.length == 0 || x[0] == null){
            this.nextInChain.set(JavaWebGPU.createNullPointer());
        } else {
            this.nextInChain.set(x);
        }
    }

    public java.lang.String getLabel(){
        return RustCString.fromPointer(label.get());
    }

    public void setLabel(java.lang.String x){
        this.label.set(RustCString.toPointer(x));
    }

    public jnr.ffi.Pointer getPlane0(){
        return plane0.get();
    }

    public void setPlane0(jnr.ffi.Pointer x){
        this.plane0.set(x);
    }

    public jnr.ffi.Pointer getPlane1(){
        return plane1.get();
    }

    public void setPlane1(jnr.ffi.Pointer x){
        this.plane1.set(x);
    }

    public WGPUOrigin2D getVisibleOrigin(){
        return visibleOrigin;
    }

    public WGPUExtent2D getVisibleSize(){
        return visibleSize;
    }

    public long getDoYuvToRgbConversionOnly(){
        return doYuvToRgbConversionOnly.get();
    }

    public void setDoYuvToRgbConversionOnly(long x){
        this.doYuvToRgbConversionOnly.set(x);
    }

    public jnr.ffi.Pointer getYuvToRgbConversionMatrix(){
        return yuvToRgbConversionMatrix.get();
    }

    public void setYuvToRgbConversionMatrix(jnr.ffi.Pointer x){
        this.yuvToRgbConversionMatrix.set(x);
    }

    public jnr.ffi.Pointer getSrcTransferFunctionParameters(){
        return srcTransferFunctionParameters.get();
    }

    public void setSrcTransferFunctionParameters(jnr.ffi.Pointer x){
        this.srcTransferFunctionParameters.set(x);
    }

    public jnr.ffi.Pointer getDstTransferFunctionParameters(){
        return dstTransferFunctionParameters.get();
    }

    public void setDstTransferFunctionParameters(jnr.ffi.Pointer x){
        this.dstTransferFunctionParameters.set(x);
    }

    public jnr.ffi.Pointer getGamutConversionMatrix(){
        return gamutConversionMatrix.get();
    }

    public void setGamutConversionMatrix(jnr.ffi.Pointer x){
        this.gamutConversionMatrix.set(x);
    }

    public long getMirrored(){
        return mirrored.get();
    }

    public void setMirrored(long x){
        this.mirrored.set(x);
    }

    public WGPUExternalTextureRotation getRotation(){
        return rotation.get();
    }

    public void setRotation(WGPUExternalTextureRotation x){
        this.rotation.set(x);
    }

}